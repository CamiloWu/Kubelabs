apiVersion: v1
kind: Service
metadata:
  labels:
    app: kustom-apps
  name: svc-api
spec:
  ports:
  - name: api
    port: 3000
    protocol: TCP
    targetPort: 3000
  selector:
    app: kustom-apps
    type: backend
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: kustom-apps
  name: svc-web
spec:
  ports:
  - name: api
    port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: kustom-apps
    type: frontend
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: kustom-apps
  name: deploy-api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kustom-apps
      type: backend
  template:
    metadata:
      labels:
        app: kustom-apps
        type: backend
      name: pod-api
    spec:
      containers:
      - image: cachac/kube_api
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /graphql?query=%7B__typename%7D
            port: 3000
          initialDelaySeconds: 20
          periodSeconds: 30
          timeoutSeconds: 5
        name: kube-api
        ports:
        - containerPort: 3000
        readinessProbe:
          httpGet:
            path: /graphql?query=%7B__typename%7D
            port: 3000
          initialDelaySeconds: 20
          periodSeconds: 30
          timeoutSeconds: 5
        resources:
          limits:
            cpu: 100m
            memory: 100Mi
          requests:
            cpu: 100m
            memory: 50Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: kustom-apps
  name: deploy-web
spec:
  replicas: 2
  selector:
    matchLabels:
      app: kustom-apps
      type: frontend
  template:
    metadata:
      labels:
        app: kustom-apps
        type: frontend
      name: pod-web
    spec:
      containers:
      - image: cachac/kube_webapp_ci:v3.0.0
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 30
          timeoutSeconds: 5
        name: kube-webapp
        ports:
        - containerPort: 8080
        readinessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 30
          timeoutSeconds: 5
        resources:
          limits:
            cpu: 100m
            memory: 100Mi
          requests:
            cpu: 100m
            memory: 50Mi
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
  labels:
    app: kustom-apps
  name: in-api
spec:
  defaultBackend:
    service:
      name: svc-api
      port:
        number: 3000
  rules:
  - host: api.kube1.kubelabs.tk
    http:
      paths:
      - backend:
          service:
            name: svc-api
            port:
              number: 3000
        path: /
        pathType: Prefix
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
  labels:
    app: kustom-apps
  name: in-web
spec:
  defaultBackend:
    service:
      name: svc-web
      port:
        number: 80
  rules:
  - host: kube1.kubelabs.tk
    http:
      paths:
      - backend:
          service:
            name: svc-web
            port:
              number: 80
        path: /
        pathType: Prefix
